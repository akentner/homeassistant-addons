name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Optimize workflow concurrency
concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.14'

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements-lint.txt', '.pre-commit-config.yaml') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Install lint dependencies
        run: |
          # Install Python dependencies
          python -m pip install --upgrade pip
          pip install pre-commit yamllint shellcheck-py

          # Install Node.js dependencies
          npm install -g markdownlint-cli2

          # Create requirements file for caching
          pip freeze > requirements-lint.txt

      - name: Install actionlint
        run: |
          # Install actionlint binary directly
          ACTIONLINT_VERSION=$(curl -s https://api.github.com/repos/rhysd/actionlint/releases/latest | jq -r .tag_name)
          curl -sL "https://github.com/rhysd/actionlint/releases/download/${ACTIONLINT_VERSION}/actionlint_${ACTIONLINT_VERSION#v}_linux_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/actionlint /usr/local/bin/
          actionlint --version

      - name: Run pre-commit hooks
        run: |
          pre-commit install
          pre-commit run --all-files

      - name: Lint YAML files
        run: |
          echo "Linting YAML files..."
          find . -name "*.yaml" -o -name "*.yml" | grep -v ".git" | xargs yamllint -d relaxed

      - name: Lint GitHub Actions workflows
        run: |
          echo "Linting GitHub Actions workflows..."
          actionlint

      - name: Lint shell scripts
        run: |
          echo "� Running shellcheck on shell scripts..."
          find . -name "*.sh" -type f -exec shellcheck {} + || \
            echo "No shell scripts to check"

      - name: Lint Markdown files
        run: |
          echo "Linting Markdown files..."
          markdownlint-cli2 "**/*.md" "#node_modules" "#.git"

      - name: Validate Add-on configurations
        run: |
          echo "Validating Add-on configurations..."

          # Check that all add-on directories have required files
          for addon_dir in */; do
            if [[ -f "${addon_dir}config.yaml" ]]; then
              echo "Validating ${addon_dir}..."

              # Check required files exist
              for required_file in "config.yaml" "Dockerfile" "run.sh"; do
                if [[ ! -f "${addon_dir}${required_file}" ]]; then
                  echo "ERROR: ${addon_dir} missing required file: ${required_file}"
                  exit 1
                fi
              done

              # Validate config.yaml structure
              if ! yq eval '.name' "${addon_dir}config.yaml" >/dev/null 2>&1; then
                echo "ERROR: ${addon_dir}config.yaml is invalid or missing 'name' field"
                exit 1
              fi

              # Check if upstream config exists and validate it
              if [[ -f "${addon_dir}.upstream.yaml" ]]; then
                if ! yq eval '.upstream.repository' "${addon_dir}.upstream.yaml" >/dev/null 2>&1; then
                  echo "ERROR: ${addon_dir}.upstream.yaml is invalid or missing 'upstream.repository' field"
                  exit 1
                fi
              fi

              echo "✅ ${addon_dir} validation passed"
            fi
          done

      - name: Check for common issues
        run: |
          echo "Checking for common issues..."

          # Check for tabs in YAML files (should use spaces)
          if grep -r $'\t' --include="*.yaml" --include="*.yml" .; then
            echo "ERROR: Found tabs in YAML files. Use spaces instead."
            exit 1
          fi

          # Check for trailing whitespace
          if find . \( -name "*.yaml" -o -name "*.yml" -o -name "*.md" -o -name "*.sh" \) -print0 | xargs -0 grep -l '[[:space:]]$'; then
            echo "WARNING: Found trailing whitespace in files"
          fi

          # Check for mixed line endings
          if find . \( -name "*.yaml" -o -name "*.yml" -o -name "*.md" -o -name "*.sh" \) -print0 | xargs -0 file | grep -i crlf; then
            echo "ERROR: Found files with Windows line endings (CRLF). Use Unix line endings (LF)."
            exit 1
          fi

          echo "✅ Common issues check passed"

  lint-results:
    needs: lint
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Report results
        run: |
          if [[ "${{ needs.lint.result }}" == "success" ]]; then
            echo "✅ All lint checks passed!"
          else
            echo "❌ Lint checks failed. Please fix the issues above."
            exit 1
          fi
